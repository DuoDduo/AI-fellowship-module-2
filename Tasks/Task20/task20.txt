-- 01_create_tables.sql

CREATE DATABASE library_db;
\c library_db

-- Authors
CREATE TABLE Authors (
  author_id SERIAL PRIMARY KEY,
  first_name VARCHAR(100) NOT NULL,
  last_name VARCHAR(100) NOT NULL,
  birth_year INT,
  country VARCHAR(100)
);

-- Departments
CREATE TABLE Departments (
  department_id SERIAL PRIMARY KEY,
  name VARCHAR(100) NOT NULL UNIQUE,
  location VARCHAR(100)
);

-- LibraryStaff
CREATE TABLE LibraryStaff (
  staff_id SERIAL PRIMARY KEY,
  first_name VARCHAR(100) NOT NULL,
  last_name VARCHAR(100) NOT NULL,
  department_id INT NOT NULL REFERENCES Departments(department_id) ON DELETE RESTRICT,
  hire_date DATE NOT NULL,
  email VARCHAR(255) UNIQUE,
  phone VARCHAR(50)
);

-- Members
CREATE TABLE Members (
  member_id SERIAL PRIMARY KEY,
  first_name VARCHAR(100),
  last_name VARCHAR(100),
  email VARCHAR(255) UNIQUE,
  join_date DATE NOT NULL,
  membership_type VARCHAR(50) CHECK (membership_type IN ('Basic','Premium','Student','Senior')),
  status VARCHAR(50) DEFAULT 'Active'
);

-- Books
CREATE TABLE Books (
  book_id SERIAL PRIMARY KEY,
  title VARCHAR(300) NOT NULL,
  author_id INT NOT NULL REFERENCES Authors(author_id) ON DELETE CASCADE,
  genre VARCHAR(100),
  published_year INT,
  total_copies INT DEFAULT 1 CHECK (total_copies >= 0),
  available_copies INT DEFAULT 1 CHECK (available_copies >= 0),
  isbn VARCHAR(20) UNIQUE,
  supplier VARCHAR(150)
);

-- BorrowHistory
CREATE TABLE BorrowHistory (
  borrow_id SERIAL PRIMARY KEY,
  book_id INT NOT NULL REFERENCES Books(book_id) ON DELETE CASCADE,
  member_id INT NOT NULL REFERENCES Members(member_id) ON DELETE CASCADE,
  borrow_date DATE NOT NULL,
  due_date DATE NOT NULL,
  return_date DATE, -- NULL if not yet returned
  staff_id INT REFERENCES LibraryStaff(staff_id)
);

-- BookOrders
CREATE TABLE BookOrders (
  order_id SERIAL PRIMARY KEY,
  book_id INT REFERENCES Books(book_id),
  supplier VARCHAR(150) NOT NULL,
  order_date DATE NOT NULL,
  qty INT NOT NULL CHECK (qty >= 0),
  unit_price NUMERIC(10,2) NOT NULL CHECK (unit_price >= 0),
  fulfilled BOOLEAN DEFAULT FALSE,
  fulfillment_date DATE
);


-- 02_load_data.sql

-- Authors (sample)
INSERT INTO Authors (first_name,last_name,birth_year,country) VALUES
('Chinua','Achebe',1930,'Nigeria'),
('Jane','Austen',1775,'United Kingdom'),
('George','Orwell',1903,'United Kingdom'),
('N.K.','Jemisin',1972,'USA'),
('James','Baldwin',1924,'USA');

-- Departments
INSERT INTO Departments (name,location) VALUES
('Circulation','Ground Floor'),
('Acquisitions','1st Floor'),
('Reference','2nd Floor'),
('Children','Ground Floor - East');

-- LibraryStaff
INSERT INTO LibraryStaff (first_name,last_name,department_id,hire_date,email,phone) VALUES
('Aisha','Okoro',1,'2019-05-21','aisha.okoro@library.edu','+234800000001'),
('Tunde','Adebayo',1,'2017-11-01','tunde.adebayo@library.edu','+234800000002'),
('Helen','Smith',2,'2020-02-14','helen.smith@library.edu','+234800000003');

-- Members
INSERT INTO Members (first_name,last_name,email,join_date,membership_type) VALUES
('Blessing','James','blessing@example.com','2023-06-15','Premium'),
('Emeka','Nnadi','emeka@example.com','2024-03-10','Basic'),
('Ngozi','Okafor','ngozi@example.com','2022-09-05','Premium');

-- Books
INSERT INTO Books (title,author_id,genre,published_year,total_copies,available_copies,isbn,supplier) VALUES
('Things Fall Apart',1,'Historical Fiction',1958,5,2,'9780141184470','Africana Books Ltd'),
('1984',3,'Dystopian',1949,4,1,'9780451524935','Global Books'),
('The Fifth Season',4,'Science Fiction',2015,6,4,'9780316229296','SciFi Supplies'),
('Go Tell It on the Mountain',5,'Memoir',1953,3,3,'9780141184739','Global Books');

-- BorrowHistory (some returned, some not)
INSERT INTO BorrowHistory (book_id,member_id,borrow_date,due_date,return_date,staff_id) VALUES
(1,1,'2025-09-01','2025-09-21',NULL,1),
(2,2,'2024-08-01','2024-08-31','2024-08-29',2),
(3,3,'2025-05-10','2025-06-09','2025-06-01',1);

-- BookOrders
INSERT INTO BookOrders (book_id,supplier,order_date,qty,unit_price,fulfilled,fulfillment_date) VALUES
(1,'Africana Books Ltd','2024-03-05',10,8.50,TRUE,'2024-03-20'),
(2,'Global Books','2024-07-10',5,10.00,FALSE,NULL),
(3,'SciFi Supplies','2024-11-15',3,12.75,TRUE,'2024-11-30');


# database_connection.py
from sqlalchemy import create_engine
import pandas as pd

# Replace with your credentials
USER = "your_username"
PASS = "your_password"
HOST = "localhost"
PORT = "5432"
DB = "library_db"

engine = create_engine(f'postgresql://{USER}:{PASS}@{HOST}:{PORT}/{DB}')

# test
with engine.connect() as conn:
    print(pd.read_sql("SELECT COUNT(*) as n FROM Books", conn))

